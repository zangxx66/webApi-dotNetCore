// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20181025091040_3rdMigration")]
    partial class _3rdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AnthorId");

                    b.Property<string>("Category");

                    b.Property<string>("Context");

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("Show");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AnthorId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("WebAPI.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ArticleId");

                    b.Property<string>("Context");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Email");

                    b.Property<string>("NickName");

                    b.Property<Guid?>("parentCommentId");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("parentCommentId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("WebAPI.Models.Logs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Expcetion");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("WebAPI.Models.TimeLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateDate");

                    b.HasKey("Id");

                    b.ToTable("TimeLines");
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("Git");

                    b.Property<DateTime>("LastDate");

                    b.Property<string>("LastIp");

                    b.Property<string>("NickName");

                    b.Property<string>("Password");

                    b.Property<int>("QQ");

                    b.Property<DateTime>("RegDate");

                    b.Property<string>("RegIp");

                    b.Property<int>("Role");

                    b.Property<int>("Sex");

                    b.Property<string>("Twitter");

                    b.Property<string>("UserName");

                    b.Property<string>("Weibo");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebAPI.Models.Article", b =>
                {
                    b.HasOne("WebAPI.Models.User", "Anthor")
                        .WithMany()
                        .HasForeignKey("AnthorId");
                });

            modelBuilder.Entity("WebAPI.Models.Comment", b =>
                {
                    b.HasOne("WebAPI.Models.Article")
                        .WithMany("Comment")
                        .HasForeignKey("ArticleId");

                    b.HasOne("WebAPI.Models.Comment", "parentComment")
                        .WithMany()
                        .HasForeignKey("parentCommentId");
                });
#pragma warning restore 612, 618
        }
    }
}
